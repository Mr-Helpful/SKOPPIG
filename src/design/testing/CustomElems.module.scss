.bi.node {
  $port-radius: 1rem;
  $edge-weight: 0.1rem;
  $border-radius: 0.75rem;

  display: inline-block;

  // a container used to space ports
  // along the top/bottom of the node
  .ports {
    display: flex;
    justify-content: space-evenly;

    &>* {
      z-index: 1;
    }

    // a possible styling for a circular port
    .circlePort {
      width: $port-radius;
      height: $port-radius;

      border: $edge-weight solid black;
      border-radius: $port-radius;
      background-color: blue;
    }
  }

  // styling to be used for 'content-like' items
  %box {
    border: $edge-weight solid black;
    border-radius: $border-radius;
    background-color: white;

    // give some indication of a node being selected
    &.selected {
      box-shadow: 0px 0px 5px black;
    }
  }

  // a wrapper used to contain and align both
  // the content and the action menu behind it
  .body {
    display: grid;
    margin: calc($port-radius / -2 - 0.75 * $edge-weight) 0;

    // overlap the content and menu
    .content,
    .menu {
      grid-column: 1;
      grid-row: 1;
    }

    // the content to be displayed within the node
    .content {
      @extend %box;
      padding: calc($port-radius * 0.75);
      text-align: center;
    }

    // the action menu for the node
    // could contain actions such as:
    // > delete node
    // > duplicate node
    // > select all children
    // > ...
    .menu {
      // TODO: replace this with more customised styling for the menu
      @extend %box;
      position: relative;
      left: 0;
      transition: left 0.5s ease-out;

      // the menu should be below the content
      z-index: -1;

      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }

    // open our action menu on hover
    &:hover .menu {
      transition-duration: 0.3s;
      left: 1rem;
    }
  }
}